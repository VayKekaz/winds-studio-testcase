{
  "swagger": "2.0",
  "info": {
    "description": "Basically user storage with CRUD operations. Has only one entity and operates only with it",
    "version": "1.0.0",
    "title": "Winds Studio backend-testcase"
  },
  "host": "localhost:8080",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns users paginated.",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "description": "index of desired page",
            "required": false,
            "default": 0,
            "type": "integer",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "number of items per page",
            "required": false,
            "default": 10,
            "type": "integer",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Page"
                },
                {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/User"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create new user and get it back with id.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Duplicate email or other constraint violation",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "pagination": {
          "type": "object",
          "properties": {
            "pageNumber": {
              "type": "integer"
            },
            "pageSize": {
              "type": "integer"
            },
            "order": {
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            }
          }
        },
        "totalElements": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "totalPages": {
          "type": "integer"
        },
        "isLast": {
          "type": "boolean"
        },
        "isOutOfBounds": {
          "type": "boolean"
        }
      }
    },
    "ServerErrorResponse": {
      "type": "object",
      "properties": {
        "exceptionName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}